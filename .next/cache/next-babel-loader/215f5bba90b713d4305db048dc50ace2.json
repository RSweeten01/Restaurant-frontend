{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rswee\\\\MITxPro\\\\Restaurant-App2\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from './context';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from 'reactstrap';\n\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContextProvider);\n  const GET_RESTAURANT_DISHES = gql`\n\t\tquery ($id: ID!) {\n\t\t\trestaurant(id: $id) {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tdishes {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\timage {\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.dishes.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: '0 10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: `http://localhost:1337${res.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      color: \"primary\",\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }, \" No Dishes\");\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/rswee/MITxPro/Restaurant-App2/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","AppContextProvider","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","dishes","map","res","padding","margin","height","width","image","url","name","description"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from './context';\nimport {\n\tButton,\n\tCard,\n\tCardBody,\n\tCardImg,\n\tCardText,\n\tCardTitle,\n\tRow,\n\tCol,\n} from 'reactstrap';\nfunction Dishes({ restId }) {\n\tconst [restaurantID, setRestaurantID] = useState();\n\tconst { addItem } = useContext(AppContextProvider);\n\n\tconst GET_RESTAURANT_DISHES = gql`\n\t\tquery ($id: ID!) {\n\t\t\trestaurant(id: $id) {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tdishes {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\timage {\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst router = useRouter();\n\n\tconst { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n\t\tvariables: { id: restId },\n\t});\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>ERROR here</p>;\n\tif (!data) return <p>Not found</p>;\n\n\tlet restaurant = data.restaurant;\n\n\tif (restId > 0) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{restaurant.dishes.map((res) => (\n\t\t\t\t\t<Col xs='6' sm='4' style={{ padding: 0 }} key={res.id}>\n\t\t\t\t\t\t<Card style={{ margin: '0 10px' }}>\n\t\t\t\t\t\t\t<CardImg\n\t\t\t\t\t\t\t\ttop={true}\n\t\t\t\t\t\t\t\tstyle={{ height: 150, width: 150 }}\n\t\t\t\t\t\t\t\tsrc={`http://localhost:1337${res.image.url}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle>{res.name}</CardTitle>\n\t\t\t\t\t\t\t\t<CardText>{res.description}</CardText>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<div className='card-footer'>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\tonClick={() => addItem(res)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+ Add To Cart\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</>\n\t\t);\n\t} else {\n\t\treturn <h1> No Dishes</h1>;\n\t}\n}\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}